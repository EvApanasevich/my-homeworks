{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","src","avatar","corner","content","name","text","time","messageData","HW1","SuperButton","red","restProps","finalClassName","default","Affair","item","affair","priority","priority_red","priority_green","priority_yellow","onClick","deleteAffairCallback","_id","children","Affairs","data","filter","setFilter","mappedAffairs","map","a","active_button","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","superInput","errorInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","event","placeholder","totUsers","GreetingContainer","users","addUserCallback","setName","setError","length","trim","alert","HW3","setUsers","user","v1","newUsers","SuperCheckbox","onChangeChecked","checkbox","checked","span","HW4","setText","showAlert","setChecked","column","style","margin","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.90abc1a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Affairs_item__2WQfT\",\"name\":\"Affairs_name__1mQCS\",\"priority\":\"Affairs_priority__2T6OP\",\"button\":\"Affairs_button__26iUU\",\"active_button\":\"Affairs_active_button__3KQ7T\",\"priority_green\":\"Affairs_priority_green__1nvHF\",\"priority_red\":\"Affairs_priority_red__27DQw\",\"priority_yellow\":\"Affairs_priority_yellow__3yu-I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2fXLe\",\"avatar\":\"Message_avatar__1bgQi\",\"corner\":\"Message_corner__23C3Z\",\"content\":\"Message_content__1iliK\",\"name\":\"Message_name__2jZtW\",\"text\":\"Message_text__g244a\",\"time\":\"Message_time__4eGVW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1AMIf\",\"errorInput\":\"SuperInputText_errorInput__3sdcO\",\"error\":\"SuperInputText_error__1-1TL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3FYmQ\",\"red\":\"SuperButton_red__3peM0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2dYLF\",\"span\":\"SuperCheckbox_span__35v1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3ifHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"butt\":\"Greeting_butt__2D-WW\",\"totUsers\":\"Greeting_totUsers__1RuL8\",\"err_text\":\"Greeting_err_text__3ixdK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__KAWqV\",\"column\":\"HW4_column__2Z_qU\",\"testSpanError\":\"HW4_testSpanError__30-jJ\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\n\r\ntype PropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nfunction Message(props: PropsType) {\r\n    return (\r\n        <div className={s.message}>\r\n\r\n            <img src={props.avatar} className={s.avatar}/>\r\n\r\n            <div className={s.corner}/>\r\n\r\n            <div className={s.content}>\r\n                <div className={s.name}>{props.name}</div>\r\n                <div className={s.text}>{props.message}</div>\r\n                <div className={s.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from './Message'\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Artem',\r\n    message: 'npm start нажимал?',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${className ? className : s.default} ${red ? s.red : ''}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport s from './Affairs.module.css'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType  // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.name}>{props.affair.name}</div>\r\n            <div className={props.affair.priority === 'high' ? s.priority_red :\r\n                            props.affair.priority === 'low' ? s.priority_green : s.priority_yellow}>\r\n                {'[' + props.affair.priority + ']'}\r\n            </div>\r\n            <SuperButton onClick={deleteCallback} children={'x'} red/>\r\n            {/*<button onClick={deleteCallback} className={s.button}>x</button>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    filter: FilterType\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n}\r\n\r\nconst Affairs: React.FC<AffairsPropsType> = ({data, filter, setFilter, deleteAffairCallback}) => {\r\n    const mappedAffairs = data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {setFilter('all')} // need to fix\r\n    const setHigh = () => {setFilter('high')}\r\n    const setMiddle = () => {setFilter('middle')}\r\n    const setLow = () => {setFilter('low')}\r\n\r\n    return (\r\n        <div>\r\n            {mappedAffairs}\r\n            <SuperButton className={filter === 'all' ? s.active_button : ''}\r\n                         onClick={setAll} children={'all'}\r\n            />\r\n            <SuperButton className={filter === 'high' ? s.active_button : ''}\r\n                         onClick={setHigh} children={'higt'}\r\n            />\r\n            <SuperButton className={filter === 'middle' ? s.active_button : ''}\r\n                         onClick={setMiddle} children={'middle'}\r\n            />\r\n            <SuperButton className={filter === 'low' ? s.active_button : ''}\r\n                         onClick={setLow} children={'low'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle'\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType) => { // need to fix any\r\n    if (filter === 'high') {\r\n        return affairs.filter(a => a.priority === 'high')\r\n    } else if (filter === 'middle') {\r\n        return affairs.filter(a => a.priority === 'middle')\r\n    } else if (filter === 'low') {\r\n        return affairs.filter(a => a.priority === 'low')\r\n    }\r\n    return affairs\r\n}\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number) => {\r\n     return affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs: Array<AffairType> = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                filter={filter}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)         // если есть пропс onChange то передать ему е (поскольку onChange не обязателен)\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error ? '' : s.superInput} \r\n                                 ${error ? s.errorInput : ''} \r\n                                 ${className ? className : ''}`\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (event: ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: number\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n\r\n    const onKeyPress = (event: KeyboardEvent<HTMLInputElement>) => {\r\n        if (event.key === 'Enter') {\r\n            addUser()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SuperInputText\r\n                value={name}\r\n                onChange={setNameCallback}\r\n                onKeyPress={onKeyPress}\r\n                error={error}\r\n                placeholder={'enter your name'}\r\n            />\r\n            <SuperButton onClick={addUser} children={'add name'}/>\r\n            {/*<button className={s.butt} onClick={addUser}>add</button>*/}\r\n            <span className={s.totUsers}>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n}\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('')\r\n    const [error, setError] = useState<string>('')\r\n\r\n    const setNameCallback = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setName(event.currentTarget.value)\r\n        setError('')\r\n    }\r\n    const addUser = () => {\r\n        if (name.trim()) {\r\n            addUserCallback(name.trim())\r\n            alert(`Hello  '${name.trim()}' !`)\r\n        } else {\r\n            setError('name is require!')\r\n        }\r\n        setName('')\r\n    }\r\n\r\n    const totalUsers = users.length\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState,} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid'\r\n\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => {\r\n        const user: UserType = {_id: v1(), name: name}\r\n        const newUsers = [...users, user]\r\n        setUsers(newUsers)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.span}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'text is require!'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n            setText('')\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    placeholder={'enter some text'}\r\n                />\r\n                <SuperInputText placeholder={'enter some text'}/>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                {/*<SuperButton>\r\n                    default\r\n                </SuperButton>*/}\r\n\r\n                <SuperButton children={'default'} />\r\n\r\n                <SuperButton\r\n                    style={{margin: '10px 0 10px 0'}}\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                    children={'delete'}\r\n                />\r\n\r\n                <SuperButton disabled>\r\n                    disabled {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                    children={'some text'}\r\n                />\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}